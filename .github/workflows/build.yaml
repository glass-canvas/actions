name: "Build Docker Images"
on:
  workflow_call:
    inputs:
      app_name:
        type: string
      base:
        description: "Use if you need to build a base image and push to the registry"
        required: false
        type: boolean
      image_name:
        type: string
        description: "Docker image name part. Fills in ghcr.io/IMAGE_NAME. Typically this is the `repo_name`, but in some projects it might be `repo_name/sub_name`"
      image_registry:
        type: string
        description: "Docker image registry part. Defaults to ghcr.io"
      platforms:
        default: "linux/amd64,linux/arm64"
        type: string
      registry_user:
        type: string
      subdir:
        default: '.'
        type: string
      solr:
        description: "Use if you need to build a specific Solr image and push to the registry"
        required: false
        type: boolean
      tag:
        required: false
        type: string
      target:
        required: false
        type: string
      worker:
        required: false
        type: boolean
      workerTarget:
        required: false
        type: string

env:
  REGISTRY: ${{ inputs.image_registry || 'ghcr.io' }}

jobs:
  build:
    runs-on: self-hosted
    steps:
      - id: setup
        name: Setup
        uses: glass-canvas/actions/setup-env@main
        with:
          tag: ${{ inputs.tag }}
          image_name: ${{ inputs.image_name }}
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Context for Buildx
        run: docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: builder
        with:
          version: latest
          endpoint: builders
      - name: Append ARM buildx builder
        uses: baschny/append-buildx-action@v1
        with:
          builder: ${{ steps.builder.outputs.name }}
          endpoint: "ssh://ec2-user@18.246.29.3"
          ssh_private_key: ${{ secrets.SSH_BESTIE_BUILDER_PRIVATE_KEY }}
      - name: Pull from cache to speed up build
        run: >-
          cd ${{ inputs.subdir }};
          touch .env.development;
          touch .env;
          TAG=latest docker-compose pull web || true
      - name: Retag action for base
        if: ${{ inputs.base }}
        id: meta-base
        uses: docker/metadata-action@v4.1.1
        with:
          images: |
            name=${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/base
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Retag action for web
        id: meta-web
        uses: docker/metadata-action@v4.1.1
        with:
          images: |
            name=${{ env.REGISTRY }}/${{ env.REPO_LOWER }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Retag action for worker
        if: ${{ inputs.worker }}
        id: meta-worker
        uses: docker/metadata-action@v4.1.1
        with:
          images: |
            name=${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/worker
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Retag action for solr
        if: ${{ inputs.solr }}
        id: meta-solr
        uses: docker/metadata-action@v4.1.1
        with:
          images: |
            name=${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/solr
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ inputs.registry_user || github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          limit-access-to-actor: true
      - name: Build and push base
        if: ${{ inputs.base }}
        uses: docker/build-push-action@v3
        with:
          build-args: |
            "APP_PATH=${{ inputs.subdir }}"
            "APP_NAME=${{ inputs.app_name }}"
            "BRANCH=${{ env.TAG }}"
            "DEPLOY_KEY=${{ secrets.DEPLOY_KEY }}"
            "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}"
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/base:${{ env.TAG }}
          context: .
          file: ${{ inputs.subdir}}/Dockerfile
          platforms: ${{ inputs.platforms }}
          push: true
          tags: |
            ${{ steps.meta-base.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/base:${{ env.TAG }}
          target: ${{ inputs.target }}
      - name: Build and push web
        uses: docker/build-push-action@v3
        with:
          build-args: |
            "APP_PATH=${{ inputs.subdir }}"
            "APP_NAME=${{ inputs.app_name }}"
            "BRANCH=${{ env.TAG }}"
            "DEPLOY_KEY=${{ secrets.DEPLOY_KEY }}"
            "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}"
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPO_LOWER }}:${{ env.TAG }}
          context: .
          file: ${{ inputs.subdir}}/Dockerfile
          platforms: ${{ inputs.platforms }}
          push: true
          tags: |
            ${{ steps.meta-web.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}:${{ env.TAG }}
          target: ${{ inputs.target }}
      - name: Build and push worker
        if: ${{ inputs.worker }}
        uses: docker/build-push-action@v3
        with:
          build-args: |
            APP_PATH=${{ inputs.subdir }}
            APP_NAME=${{ inputs.app_name }}
            BRANCH=${{ env.TAG }}
            "DEPLOY_KEY=${{ secrets.DEPLOY_KEY }}"
            "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}"
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/worker:${{ env.TAG }}
          context: .
          file: ${{ inputs.subdir}}/Dockerfile
          platforms: ${{ inputs.platforms }}
          push: true
          tags: |
            ${{ steps.meta-worker.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/worker:${{ env.TAG }}
          target: ${{ inputs.workerTarget }}
      - name: Build and push solr
        if: ${{ inputs.solr }}
        uses: docker/build-push-action@v3
        with:
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/solr:${{ env.TAG }}
          context: .
          platforms: ${{ inputs.platforms }}
          push: true
          tags: |
            ${{ steps.meta-solr.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.REPO_LOWER }}/solr:${{ env.TAG }}
          target: ${{ inputs.target }}






       - name: Do deploy
        if: ${{ inputs.solr }}
        run: |
          echo $KUBECONFIG_FILE | base64 -d > $KUBECONFIG;
          DOLLAR=$ envsubst < ops/${{ inputs.environment }}-deploy.tmpl.yaml > ops/${{ inputs.environment }}-deploy.yaml;
          export DEPLOY_TAG=${TAG};
          export DEPLOY_IMAGE=ghcr.io/${REPO_LOWER};
          export WORKER_IMAGE=ghcr.io/${REPO_LOWER}/worker;
          export SOLR_IMAGE=ghcr.io/${REPO_LOWER}/solr;
          ./bin/helm_deploy ${{ inputs.k8s-release-name || format('{0}-{1}', github.event.repository.name, inputs.environment) }} ${{ inputs.k8s-namespace || format('{0}-{1}', github.event.repository.name, inputs.environment) }}
      - name: Do deploy
        run: |
          echo $KUBECONFIG_FILE | base64 -d > $KUBECONFIG;
          DOLLAR=$ envsubst < ops/${{ inputs.environment }}-deploy.tmpl.yaml > ops/${{ inputs.environment }}-deploy.yaml;
          export DEPLOY_TAG=${TAG};
          export DEPLOY_IMAGE=ghcr.io/${REPO_LOWER};
          export WORKER_IMAGE=ghcr.io/${REPO_LOWER}/worker;
          ./bin/helm_deploy ${{ inputs.k8s-release-name || format('{0}-{1}', github.event.repository.name, inputs.environment) }} ${{ inputs.k8s-namespace || format('{0}-{1}', github.event.repository.name, inputs.environment) }}
