name: "Rspec for Rails Apps"
on:
  workflow_dispatch:
    inputs:
      worker:
        required: false
        type: boolean
      tag:
        required: false
        type: string
  workflow_call:
    inputs:
      worker:
        required: false
        type: boolean
      tag:
        required: false
        type: string
env:
  REGISTRY: ghcr.io

jobs:
  test:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        # Set N number of parallel jobs you want to run tests on.
        # Use higher number if you have slow tests to split them on more parallel jobs.
        # Remember to update ci_node_index below to 0..N-1
        ci_node_total: [3]
        # set N-1 indexes for parallel jobs
        # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1, 2]
    env:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      CONFDIR: /app/samvera/hyrax-webapp/solr/conf
      DB_CLEANER_ALLOW_REMOTE_DB_URL: "true"
      TB_RSPEC_FORMATTER: progress
      TB_RSPEC_OPTIONS: --format RspecJunitFormatter --out rspec.xml
    steps:
      - id: setup
        name: Setup
        uses: scientist-softserv/actions/setup-env@self-hosted-runner
        with:
          tag: ${{ inputs.tag || env.TAG }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Github Container Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          limit-access-to-actor: true
      - name: Pull image to prevent build
        run: >-
          touch .env.development;
          touch .env;
          docker pull ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.TAG }}
      - name: Pull worker image to prevent build
        if: ${{ inputs.worker == 'true' }}
        run: docker pull ${{ env.REGISTRY }}/${{ github.repository }}/worker:${{ env.TAG }}
      - name: Setup solr
        run: >-
          docker exec -T ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.TAG }} bash -c
          "solrcloud-upload-configset.sh ${{ env.CONFDIR }} &&
          SOLR_COLLECTION_NAME=hydra-test solrcloud-assign-configset.sh &&
          solrcloud-assign-configset.sh"
      - name: Setup db
        run: >-
          docker exec -T ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.TAG }} bash -c
          "RAILS_ENV=test bundle exec rake db:schema:load db:migrate"
      - name: Start containers
        run: >-
          docker run ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.TAG }}   
          docker run ${{ env.REGISTRY }}/${{ github.repository }}/worker:${{ env.TAG }}  
      - name: Run Specs
        env:
          # Specifies how many jobs you would like to run in parallel,
          # used for partitioning
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          # Use the index from matrix as an environment variable
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
        continue-on-error: true
        run: >-
          docker exec -T ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.TAG }} bash -c
          "gem install semaphore_test_boosters &&
          rspec_booster --job $CI_NODE_INDEX/$CI_NODE_TOTAL"
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'rspec*.xml'
          fail_on_failure: true
