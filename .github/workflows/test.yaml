name: "Rspec for Rails Apps"
on:
  workflow_dispatch:
    inputs:
      confdir:
        required: false
        type: string
        default: "/app/samvera/hyrax-webapp/solr/config"
      image_name:
        type: string
        description: "Docker image name part. Fills in ghcr.io/IMAGE_NAME. Typically this is the `repo_name`, but in some projects it might be `repo_name/sub_name`"
      image_registry:
        type: string
        description: "Docker image registry part. Defaults to ghcr.io"
      registry_user:
        type: string
      subdir:
        default: '.'
        type: string
      tag:
        required: false
        type: string
      rspec_cmd:
        required: false
        type: string
        default: "yarn && ../tools/r/spec ."
      setup_db_cmd:
        required: false
        type: string
        default: "RAILS_ENV=test bundle exec rake db:schema:load db:migrate"
      worker:
        required: false
        type: boolean
  workflow_call:
    inputs:
      confdir:
        required: false
        type: string
        default: "/app/samvera/hyrax-webapp/solr/config"
      image_name:
        type: string
        description: "Docker image name part. Fills in ghcr.io/IMAGE_NAME. Typically this is the `repo_name`, but in some projects it might be `repo_name/sub_name`"
      image_registry:
        type: string
        description: "Docker image registry part. Defaults to ghcr.io"
      registry_user:
        type: string
      subdir:
        default: '.'
        type: string
      tag:
        required: false
        type: string
      rspec_cmd:
        required: false
        type: string
        default: "yarn && ../tools/r/spec ."
      setup_db_cmd:
        required: false
        type: string
        default: "RAILS_ENV=test bundle exec rake db:schema:load db:migrate"
      worker:
        required: false
        type: boolean

env:
  REGISTRY: ${{ inputs.image_registry || 'ghcr.io' }}

jobs:
  test:
    runs-on: self-hosted
    strategy:
      fail-fast: true
      # matrix:
        # # Set N number of parallel jobs you want to run tests on.
        # # Use higher number if you have slow tests to split them on more parallel jobs.
        # # Remember to update ci_node_index below to 0..N-1
        # ci_node_total: [3]
        # # set N-1 indexes for parallel jobs
        # # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        # ci_node_index: [0, 1, 2]
    env:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      CONFDIR: ${{ inputs.confdir }}
      DB_CLEANER_ALLOW_REMOTE_DB_URL: "true"
      TB_RSPEC_FORMATTER: progress
      TB_RSPEC_OPTIONS: --format RspecJunitFormatter --out rspec.xml
    steps:
      - id: setup
        name: Setup
        uses: glass-canvas/actions/setup-env@i3-troubleshoot-ci
        with:
          tag: ${{ inputs.tag }}
          image_name: ${{ inputs.image_name }}
          token: ${{ secrets.CHECKOUT_TOKEN || secrets.GITHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ inputs.registry_user || github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}
      - name: Pull image to prevent build
        run: >-
          cd ${{ inputs.subdir }};
          echo $ENV_DEVELOPMENT | base64 -d > .env.development;
          touch .env;
          docker-compose pull web
        env:
          ENV_DEVELOPMENT: ${{ secrets.ENV_DEVELOPMENT }}
      - name: Pull worker image to prevent build
        if: ${{ inputs.worker }}
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose pull worker
      - name: Start containers
        run: >-
          cd ${{ inputs.subdir }};
          sudo chown -R 9999:9999 .;
          docker-compose up -d web
      - name: Check for and setup Solr if needed
        shell: sh
        run: |
          cd ${{ inputs.subdir }};
          if [ -d solr ]
          then
            docker-compose exec -T web sh -c \
            "solrcloud-upload-configset.sh "${CONFDIR}" &&
            SOLR_COLLECTION_NAME=hydra-test solrcloud-assign-configset.sh &&
            solrcloud-assign-configset.sh"
          else
            echo "No solr directory found, skipping..."
          fi
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          limit-access-to-actor: true
      - name: Setup db
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose exec -T web sh -c
          "${{ inputs.setup_db_cmd }}"
      - name: Run Specs
        id: run-specs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Specifies how many jobs you would like to run in parallel,
          # used for partitioning
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          # Use the index from matrix as an environment variable
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
        continue-on-error: true
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose exec -T web sh -c \
          "${{ inputs.rspec_cmd }}"
      - name: Fail job if spec failure
        run: if [[ ${{ steps.run-specs.outcome }} == "failure" ]]; then exit 1; else exit 0; fi
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'rspec*.xml'
